#!/usr/bin/env bash

set -euo pipefail

ASDF_INSTALL_TYPE=${ASDF_INSTALL_TYPE:-version  }
TMPDIR=${TMPDIR:-/tmp}
[ -n "$ASDF_INSTALL_VERSION" ] || (>&2 echo 'Missing ASDF_INSTALL_VERSION' && exit 1)
[ -n "$ASDF_INSTALL_PATH" ] || (>&2 echo 'Missing ASDF_INSTALL_PATH' && exit 1)

fail() {
  echo -e "asdf-$TOOL_NAME: $*"
  exit 1
}

install_micro() {
  local install_type=$1
  local version=$2
  local install_path=$3
  
  if [[ "$install_type" != "version" ]]; then
    echo "Install of type [$install_type] not supported"
  fi
  local bin_install_path="${install_path}/bin"
  local tmp_download_dir="$(get_tmp_dir)"
  local download_url="$(get_download_url $version)"
  local download_path="${tmp_download_dir}/micro-${version}.tar.gz"
  mkdir -p "${bin_install_path}"
  echo "Version is ${version}"
  echo "Downloading micro from ${download_url}"
  curl -s -L "${download_url}" -o "${download_path}"
  tar --wildcards -zxf ${download_path} --directory ${tmp_download_dir} '*/micro' --strip=1
  mv ${tmp_download_dir}/micro ${bin_install_path}
  chmod +x "$bin_install_path"
  rm -f ${download_path}
}

get_arch() {
  arch=$(uname -m | tr '[:upper:]' '[:lower:]')
  case ${arch} in
  x86_64)
    arch='64'
    ;;
  esac

  echo ${arch}
}

get_tmp_dir() {
  if [ "${TMPDIR}" = "" ]; then
    echo "$(mktemp -d -t micro_XXXXXX)"
  fi
  echo "${TMPDIR}"
}

get_platform() {
  plat=$(uname | tr '[:upper:]' '[:lower:]')
  case ${plat} in
  linux)
    plat='linux'
    ;;
  darwin)
    plat='osx'
    ;;
  esac

  echo ${plat}
}

get_download_url() {
  local version="$2"
  local type="$1"
  local arch="$(get_arch)"
  local platform="$(get_platform)"
  echo "https://github.com/zyedidia/micro/releases/download/v${version}/micro-${version}-${platform}${arch}.tar.gz"
}

install_micro "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
